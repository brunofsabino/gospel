<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title> Opinião Gospel - Jessé Aguiar gera controvérsia ao declarar que não faz mais parte</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=DM+Sans:wght@400;500;700&display=swap" rel="stylesheet">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700;900&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/css/stylepage.css">
</head>
<body>
<header>
  <div class="header-content ">
    <div class="header-content-desc container">
      <div class="header-logo">
        <a href="/">
        <img src="/images/logo.png" alt="Logo Opinião Gospel">
        <p>Opinião Gospel</p>
       </a>
      </div>
      <div class="header-icons-menu">
        <nav>
          <li><a href=""><div class="area-home"><img src="/images/home.svg" alt="Imagem Home">Home</div></a></li>
          <li><a href=""><div class="area-forum"><img src="/images/forum.svg" alt="Imagem Fórum">Fórum</div></a></li>
          <% if (userId.id) { %>
            <li><a href=""><div class="area-alerts"><img src="/images/alert.svg" alt="Imagem Alerta"></div></a></li>
          <% } %> 
        </nav>
        <% if (userId.id) { %>
          <div class="header-persona"><a href=""><img src="/images/persona.png" alt="Imagem Perfil"></a></div>
          <div class="header-persona-open"><a href=""><img src="/images/seta-expandir.png" alt="Imagem Expandir Perfil">
            <div class="header-persona-perfil close">
              <a href="/user"><div class="area-persona-perfil" id="">Perfil</div></a>
              <a href="/logout"><div class="area-persona-logout" id="">Sair</div></a>
            </div></a>
          </div>
          
        <% } %> 
        <% if (!userId.id) { %>
          <div class="button-enter"><a href="">Entrar</a></div>
        <% } %> 
        <div class="modal-login-home">
          <div class="modal-login-home-content">
            <div class="modal-login-home-close">
              <img src="/images/close.svg" alt="Fechar modal">
            </div>
            <h3>Entre gratuitamente para o Opinião Gospel</h3>
            <div class="modal-login-home-inputs">
              <div class="modal-login-home-inputs-p">
                <p>Seu e-mail:</p>
              </div>
              <input type="text" placeholder="Seu e-mail" name="email" class="email">
              <p class="notice-email"></p>
              <div class="modal-login-home-inputs-p-n">
                <p>Seu nome:</p>
              </div>
              <input type="text" placeholder="Digite seu nome" name="name" class="nameInput">
              <p class="notice-name"></p>
              <div class="modal-login-home-inputs-p-p">
                <p>Sua senha:</p>
              </div>
              <input type="password" placeholder="Sua senha" name="password" class="password">
              <p class="notice-password"></p>
              <div class="modal-login-home-inputs-p-p2">
                <p>Confirme sua senha:</p>
              </div>
              <input type="password" placeholder="Confirme sua senha"  name="password2" class="p2assword">
              <p class="notice-password2"></p>
            </div>
            <div class="modal-login-home-buttons">
              <button class="buttonEmail">Continuar com o e-mail</button>
              <button class="buttonLogin">Continuar</button>
              <button class="buttonLoginEmail">Login</button>
            </div>
            <div class="modal-login-home-g">
              <p>Ou continue com o</p>
            </div>
            <div class="modal-login-home-buttons-google">
              <a class="buttonGoogle"><img src="/images/google.svg" alt=""></a>
            </div>
          </div>
          <div class="modal-login-home-content-close"></div>
        </div>
      </div>
    </div>
  </div>
</header>
<script>
  const body = document.querySelector('body')
  const buttonEnter = document.querySelector('.button-enter') 
  const areaAlertsUser = document.querySelector('.area-alerts')
  const areaPersonaUser = document.querySelector('.header-persona')
  const areaPersonaAUser = document.querySelector('.header-persona a')
  const areaPersonaIMGUser = document.querySelector('.header-persona a img')
  const areaConfigUser = document.querySelector('.header-persona-open')
  const openConfigUser = document.querySelector('.header-persona-open a')
  const areaConfigLoggoutUser = document.querySelector('.header-persona-perfil')
  const areaPerfilUser = document.querySelector('.area-persona-perfil')
  const areaLoggoutUser = document.querySelector('.area-persona-logout')


  const buttonCloseModal = document.querySelector('.modal-login-home-close')
  const backgroundModalHome = document.querySelector('.modal-login-home')
  const modalHome = document.querySelector('.modal-login-home-content-close')

  const h3Modal = document.querySelector('.modal-login-home-content h3')
  const inputEmailModal = document.querySelector('.modal-login-home-content .email')
  const inputNameModal = document.querySelector('.modal-login-home-content .nameInput')
  const inputPasswordModal = document.querySelector('.modal-login-home-content .password')
  const inputPassword2Modal = document.querySelector('.modal-login-home-content .p2assword')
  const buttonContinuesEmail = document.querySelector('.modal-login-home-content .buttonEmail')
  const buttonRegister = document.querySelector('.modal-login-home-content .buttonLogin')
  const buttonLogin = document.querySelector('.modal-login-home-content .buttonLoginEmail')
  const buttonGoogle = document.querySelector('.modal-login-home-content .buttonGoogle')
  const pEmailModal = document.querySelector('.modal-login-home-content .modal-login-home-inputs-p')
  const pNameModal = document.querySelector('.modal-login-home-content .modal-login-home-inputs-p-n')
  const pPasswordModal = document.querySelector('.modal-login-home-content .modal-login-home-inputs-p-p')
  const pPassword2Modal = document.querySelector('.modal-login-home-content .modal-login-home-inputs-p-p2')
  const pGoogleModal = document.querySelector('.modal-login-home-content .modal-login-home-g')
  const pNoticeEmail = document.querySelector('.modal-login-home-content .notice-email')
  const pNoticeName = document.querySelector('.modal-login-home-content .notice-name')
  const pNoticePassword = document.querySelector('.modal-login-home-content .notice-password')
  const pNoticePassword2 = document.querySelector('.modal-login-home-content .notice-password2')

  //areaLoggoutUser.addEventListener('click', loggoutUser)
  function toggleAreaUser(item) {
    item.preventDefault()
    areaConfigLoggoutUser.classList.toggle('close')
  }
  if(areaPersonaAUser) {

    areaPersonaAUser.addEventListener('click', item => toggleAreaUser(item))
    areaPersonaIMGUser.addEventListener('click', item => toggleAreaUser(item))
    areaPersonaUser.addEventListener('click', item => toggleAreaUser(item))
    openConfigUser.addEventListener('click',  item => toggleAreaUser(item))
    areaLoggoutUser.addEventListener('click', logoutUser )
  }

  if(buttonEnter) {

    buttonEnter.addEventListener('click', item => openModal(item)) 
  }
  function openModal(item) {
    item.preventDefault();
    body.style.overflow = 'hidden'
    backgroundModalHome.style.display = 'flex'
    setTimeout( ()=>{
      backgroundModalHome.style.opacity = 1
  }, 400);}

  modalHome.addEventListener('click', closeModal)
  buttonCloseModal.addEventListener('click', closeModal)
  

  function closeModal() {
  body.style.overflow = 'auto'
  backgroundModalHome.style.opacity = 0
  setTimeout( ()=>{
    backgroundModalHome.style.display = 'none'
    closeInputsRegisterEmail()
}, 400);
}
function logoutUser() {
  localStorage.removeItem('id')
}
buttonContinuesEmail.addEventListener('click', (item) => {
    const email = inputEmailModal.value
    const emailValid = validateEmail(email)
    if(!emailValid) {
        pNoticeEmail.innerText = 'Informe um e-mail valido'
    } else {
        findByEmail(email)
    }
} )


inputPasswordModal.addEventListener('focus', noticePassword)
inputPasswordModal.addEventListener('keyup', item => countNoticePassword(item))
inputPassword2Modal.addEventListener('focus', noticePassword2)
inputPassword2Modal.addEventListener('keyup', item => countNoticePassword2(item))

function noticePassword() {
    if(inputPasswordModal.value.length < 8) {
        pNoticePassword.innerText = 'A senha deve contar ao menos 8 digitos!'
    }
}
function noticePassword2() {
    if(inputPasswordModal.value !== inputPassword2Modal.value) {
        pNoticePassword2.innerText = 'A senha deve igual a digitada anteriormente'
    }
}
function countNoticePassword(item) {
    const count = inputPasswordModal.value.length 
    if(count == 8) {
        pNoticePassword.innerText = ''
    }
}
function countNoticePassword2(item) {
    if(inputPasswordModal.value === inputPassword2Modal.value) {
        pNoticePassword2.innerText = ''
    }
    if(inputPasswordModal.value !== inputPassword2Modal.value) {
        pNoticePassword2.innerText = 'A senha deve igual a digitada anteriormente'
    }
}
function openInputs() {
    const email = validateEmail(inputEmailModal.value)
    if(email){
        pNoticeEmail.innerText = ''
        openInputsRegisterEmail()
    } else {
        pNoticeEmail.innerText = 'Informe um e-mail valido'
    }
}
function toDoLogin() {
    buttonContinuesEmail.style.display = 'none'
    buttonGoogle.style.display = 'none'
    pGoogleModal.style.display = 'none'
    pNoticePassword.style.display = 'none'
    inputPasswordModal.style.display = 'flex'
    buttonLogin.style.display = 'flex'
    pEmailModal.style.display = 'flex'
    pPasswordModal.style.display = 'flex'
    h3Modal.innerText = 'Faça o Login em sua conta!'
}
function openInputsRegisterEmail(){
    buttonContinuesEmail.style.display = 'none'
    buttonGoogle.style.display = 'none'
    pGoogleModal.style.display = 'none'
    inputNameModal.style.display = 'flex'
    inputPasswordModal.style.display = 'flex'
    inputPassword2Modal.style.display = 'flex'
    buttonRegister.style.display = 'flex'
    pEmailModal.style.display = 'flex'
    pNameModal.style.display = 'flex'
    pPasswordModal.style.display = 'flex'
    pPassword2Modal.style.display = 'flex'
    
}
function closeInputsRegisterEmail() {
    buttonContinuesEmail.style.display = 'flex'
    buttonGoogle.style.display = 'flex'
    pGoogleModal.style.display = 'flex'
    inputNameModal.style.display = 'none'
    inputPasswordModal.style.display = 'none'
    inputPassword2Modal.style.display = 'none'
    buttonRegister.style.display = 'none'
    buttonLogin.style.display = 'none'
    pEmailModal.style.display = 'none'
    pNameModal.style.display = 'none'
    pPasswordModal.style.display = 'none'
    pPassword2Modal.style.display = 'none'
    pNoticeEmail.innerText = ''
    inputPasswordModal.value = ''
    inputPassword2Modal.value = ''
    pNoticePassword.innerText = ''
    pNoticePassword2.innerText = ''
    setTimeout( ()=>{
        buttonLogin.style.backgroundColor = 'var(--orange-black)'
        h3Modal.innerText = 'Entre gratuitamente para o Opinião Gospel'
        buttonLogin.innerText = 'Login'
        buttonRegister.style.backgroundColor = 'var(--orange-black)'
        buttonRegister.innerText = 'Continuar'
    }, 1000);
    
}
function validateEmail (emailCapturadoDoFormulario) {
   let validarRegExNoEmail = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/;
   if (emailCapturadoDoFormulario.match(validarRegExNoEmail)) {
     return true; 
   } else {
     return false; 
   }
}
function loginSucess(user) {
    buttonLogin.style.backgroundColor = '#0cc70cfc'
    buttonLogin.innerText = 'Login feito com sucesso'
    setTimeout( ()=>{
        closeModal()
    }, 500);
    //userLogged(user)
}
function createSucess(user) {
    buttonRegister.style.backgroundColor = '#0cc70cfc'
    buttonRegister.innerText = 'Conta criada com sucesso'
    setTimeout( ()=>{
        closeModal()
    }, 500);
    //userLogged(user)
}

buttonRegister.addEventListener('click', item => {
    sendDataNewUser(inputEmailModal.value, inputNameModal.value, inputPasswordModal.value, inputPassword2Modal.value)
})
buttonLogin.addEventListener('click', item => {
    loginUser(inputEmailModal.value, inputPasswordModal.value)
})

async function sendDataNewUser(email, name, password, password2) {
    pNoticePassword2.innerHTML = ''
    pNoticeEmail.innerText = ''
    pNoticeName.innerText = ''
    const emailValid = validateEmail(email)
    if(!emailValid) {
        pNoticeEmail.innerText = 'Informe um e-mail valido'
    }
    if(name.length <= 2) {
        pNoticeName.innerText = 'Informe seu nome!'
    }
    if(password !== password2) {
        pNoticePassword2.innerText = 'A senha deve igual a digitada anteriormente'
    }
    const newUser = await registerNewUser(email, name, password, password2)
}

async function findByEmail(email) {
    const emailValid = validateEmail(email)
    if(emailValid) {
        const existsEmail = await fetch(`http://localhost:4000/user/email/${email}`, {
            method: 'GET',
            headers: {
                "Content-Type": "application/x-www-form-urlencoded"
            }
        })
        const json = await existsEmail.json()
        if(json.error === 'E-mail não cadastrado') {
            openInputs()
        }
        if(json.id){
            toDoLogin()
        }
    } else {
        pNoticeEmail.innerText = 'Informe um e-mail valido'
    }
    
}
async function registerNewUser(email, name, password, password2) {
    if(password === password2) {
        const newUser = await fetch(`http://localhost:4000/user`, {
            method: 'POST',
            headers: {
                "Content-Type": "application/x-www-form-urlencoded"
            },
            body: new URLSearchParams({
                email, name, password
            })
        })
        const json = await newUser.json()
        if(json.id) {
            createSucess(json)
            location.reload() 
            // localStorage.setItem("token", json.token);
            localStorage.setItem('id', json.id)
            // areaPerfilUser.setAttribute('id', json.id)
        }
    } 
}

async function loginUser(email, password)  {
    const loginUser = await fetch(`http://localhost:4000/login`, {
        method: 'POST',
        headers: {
            "Content-Type": "application/x-www-form-urlencoded"
        },
        body: new URLSearchParams({
            email, password
        })
    })
    const json = await loginUser.json();
    if(json.id){
        loginSucess(json)
        console.log(json)
        localStorage.setItem('id', json.id)
        location.reload() 
    }
}

</script>